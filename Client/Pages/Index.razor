@page "/"

<PageTitle>Index</PageTitle>

@code
{
    private readonly PersonDto _person;
    private readonly EditContext _editContext;
    private readonly ValidationMessageStore _messageStore;
    private FluentValidationValidator? _fluentValidationValidator;
    private ValidationErrorFinder _validationErrorFinder = default!;

    public Index()
    {
        _person = new PersonDto();
        _editContext = new EditContext(_person);
        _messageStore = new ValidationMessageStore(_editContext);
        _editContext.OnValidationStateChanged += (_, _) => StateHasChanged();
        _editContext.OnFieldChanged += (_, _) => _messageStore.Clear();
    }

    private Dictionary<string, List<Expression<Func<object>>>> FieldAccessors => new()
    {
        [nameof(AddressForm)] = new List<Expression<Func<object>>>
        {
            () => _person.AddressDto.AddressLine1!,
            () => _person.AddressDto.AddressLine2!
        },
        [nameof(TestForm)] = new List<Expression<Func<object>>>
        {
            () => _person.TestDto.Messages
        }
    };

    private void OnSubmit()
    {
        var messages = _dataValidatorService.GetValidationMessages();
        foreach (var (fieldName, errors) in messages)
        {
            _messageStore.Add(_editContext.Field(fieldName), errors);
        }
        _editContext.NotifyValidationStateChanged();
        StateHasChanged();
    }

    private void OnInvalidSubmit()
    {
        _snackbar.Add("Error", Severity.Error);
    }


}

<CascadingValue Value="@_person">
    <EditForm EditContext="@_editContext" OnValidSubmit="@OnSubmit" OnInvalidSubmit="@OnInvalidSubmit">
        <ValidationSummary/>
        <FluentValidationValidator @ref="@_fluentValidationValidator"/>
        <ValidationErrorFinder FieldAccessors="@FieldAccessors" @ref="@_validationErrorFinder"/>
        <MudTextField Variant="@Variant.Outlined" Margin="@Margin.Dense" @bind-Value="@_person.PersonName" Label="PersonName" For="@(() => _person.PersonName)"/>
        <MudTabs PanelClass="pa-2" ApplyEffectsToContainer="@true" Elevation="2" Rounded="@true">
            <MudTabPanel Text="Address" BadgeColor="@_validationErrorFinder.GetBadgeColor(nameof(AddressForm))" BadgeData="@_validationErrorFinder.GetBadgeText(nameof(AddressForm))">
                <AddressForm/>
            </MudTabPanel>
            <MudTabPanel Text="Test" BadgeColor="@_validationErrorFinder.GetBadgeColor(nameof(TestForm))" BadgeData="@_validationErrorFinder.GetBadgeText(nameof(TestForm))">
                <TestForm/>
            </MudTabPanel>
        </MudTabs>
        <MudButton Class="mt-2" ButtonType="@ButtonType.Submit" Color="@Color.Primary" Variant="@Variant.Filled">Submit</MudButton>
    </EditForm>
</CascadingValue>